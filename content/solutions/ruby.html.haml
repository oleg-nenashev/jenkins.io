---
layout: solution
title: "Jenkins and Ruby"
usecase: "Ruby"
articles:
-
  - 'http://thediscoblog.com/blog/2014/01/24/continuous-delivery-for-heroku-with-jenkins/'
  - 'Continuous Delivery for Heroku With Jenkins'
-
  - 'https://atomic-penguin.github.io/blog/2014/04/29/stupid-jenkins-and-chef-tricks-part-1-rubocop/'
  - 'Integrating Rubocop into Jenkins'
-
  - 'http://www.cryptocracy.com/blog/2014/01/03/cooking-with-jenkins-test-kitchen-and-docker/'
  - 'Cooking with Jenkins, Test Kitchen and Docker'
plugins:
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Plugin'
  - 'JUnit plugin'
  - 'publishes XML formatted test reports (generated by tools like ci_reporter, cucumber) for trending and analysis'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/Brakeman+Plugin'
  - 'Brakeman plugin'
  - 'incorporates the output from the Brakeman security scanner for Rails projects'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/Rake+plugin'
  - 'Rake plugin'
  - 'adds Rake invocation as a build step'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/RubyMetrics+plugin'
  - 'RubyMetrics plugin'
  - 'reports for Jenkins. Rcov, Rails stats, Rails notes and Flog.'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+RubyMotion+Plugin'
  - 'RubyMotion plugin'
  - 'build RubyMotion projects from within Jenkins'
-
  - 'https://wiki.jenkins-ci.org/display/JENKINS/Cucumber+Test+Result+Plugin'
  - 'Cucumber Test Result plugin'
  - 'integrate and report from Cucumber executions'
---


:markdown
  Jenkins integrates well with the Ruby toolchain for common tasks that many
  Ruby developers are already running locally. Tasks such as executing
  [RSpec](http://rspec.info/) or [Cucumber](https://cucumber.io/), generating
  documentation, running code analysis tools and deploying Ruby software can
  all be done through Jenkins.


  ### Integrating test results

  Many tools, like Cucumber, can natively output JUnit-formatted XML which
  integrates by default into Jenkins via the "Publish JUnit test result report"
  Post-build Action. For tools which do not generate the appropriately
  formatted XML by default, there are gems which add the necessary formatters,
  such as [ci_reporter](https://github.com/ci-reporter/ci_reporter).

%center
  %img{:src => '/images/solution-images/junit-rspec-postbuild-action.png',
        :title => 'Configured JUnit post-build action'}/

:markdown
  By integrating the test reports into Jenkins, you can generate trends and
  reports. There are other plugins, such as the [Email
  Ext plugin](https://wiki.jenkins-ci.org/display/JENKINS/Email-ext+plugin) which can
  also make use of these machine-readable test reports to send email
  notifications with only the failing test cases listed.

%center
  %img{:src => '/images/solution-images/junit-rspec-trend.png',
        :title => 'Trending RSpec test reports'}/

:markdown
  Using plugins such as the [Cucumber Test Result
  plugin](https://wiki.jenkins-ci.org/display/JENKINS/Cucumber+Test+Result+Plugin)
  improve the integration and discoverability of successful/unsuccessful
  Cucumber scenarios.

  By integrating these tools into Jenkins, team members no longer need to
  attempt to parse thousands of lines of console output, but instead can more
  easily find the important information about a build.

  ## Presentations

%iframe{:src => '//www.slideshare.net/slideshow/embed_code/key/AewrLMZMPnLlSj',
        :width => 595, :height => 485, :frameborder => 0, :marginwidth => 0,
        :marginheight => 0, :scrolling => 'no'}/
%div{:style => 'margin-bottom: 5px;'}
  %strong
    %a{:href => '//www.slideshare.net/cowboyd/ruby-ci-withjenkins', :title => 'Ruby CI with Jenkins',
        :target => '_blank'}
      Ruby CI with Jenkins
  from
  %strong
    %a{:href => '//www.slideshare.net/cowboyd', :target => '_blank'}
      cowboyd
